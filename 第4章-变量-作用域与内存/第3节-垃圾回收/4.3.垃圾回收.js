console.log(`
    
    4.3 垃圾回收

        JavaScript 是使用垃圾回收的语言，也就是说执行环境负责在代码执行时管理内存。
    JavaScript 通过自动内存管理实现内存分配和闲置资源回收。基本思路很简单：
    确定哪个变量不会再使用，然后释放它占用的内存。这个过程是周期性的，即垃圾回收每隔
    一定间隔事件就会自动运行。

        我们以函数中局部变量的正常生命周期为例。函数中的局部变量会再函数执行时存在。
    此时，栈（或堆）内存会分配空间以保存相应的值。函数再内部使用了变量，然后退出。
    此时，就不再需要那个局部变量了，它占用的内存可以释放，供后面使用。这种情况下
    显然不再需要局部变量了，但并不是所有适合都会这么明显。垃圾回收程序必须跟踪记录
    哪个变量还会使用，以及哪个变量不会再使用，以便回收内存。如何标记未使用的变量
    也许有不同的实现方式。不过，在浏览器的发展史上，用到过两种主要的标记策略：
    标记清理和引用技术。

    `);
