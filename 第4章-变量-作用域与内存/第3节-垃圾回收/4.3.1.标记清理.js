console.log(`

    4.3.1 标记清理

        JavaScript 最常用的垃圾回收策略是标记清理（mark-and-sweep）。当变量进入上下文，
    比如在函数内部声明一个变量时，这个变量会被加上存在于上下文中的标记。而不再上下文中的变量，
    逻辑上讲，永远不应该释放它们的内存，因为只要上下文中的代码运行，就有可能用到它们。当变量
    离开上下文时，也会被加上离开上下文的标记。
        给变量加标记的方式有很多中。比如，当变量进入上下文时，反转某一位；或者可以维护“在
    上下文中”和“不在上下文中”两个变量列表，可以把变量从一个列表转移到另一个列表。标记过程的
    实现并不重要，关键是策略。
        垃圾回收程序运行的时候，会比较内存中存储的所有变量。然后，它们会将所有在上下文中的
    变量，以及被在上下文中的变量引用的变量的标记去掉。在此之后再被加上标记的变量就是待
    删除的了，原因是任何在上下文中的变量都访问不到它们了。随后垃圾回收程序做一次内存清理，
    销毁带标记的所有值并回收它们的内存。


    `);
