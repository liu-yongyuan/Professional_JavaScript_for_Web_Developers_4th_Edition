console.log(`

    7.1 理解迭代

        在 JavaScript 中，计数循环就是一种最简单的迭代。

        for(let i = 1; i <= 10; ++i){
            console.log(i);
        }

        因为数组已知长度，且数组每一项都可以通过索引获取，所以整个数组可以通过递增索引来遍历。
    由于如下原因，通过这种循环来执行例程并不理想。

        · 迭代之前需要事先指导如何使用数据结构。数据中的每一项都只能先通过引用取得数组对象，
            然后再通过 [] 操作符取得特定索引位置商的项。这种情况并不适用于所有数据结构。
        · 遍历顺序并不是数据结构固有的。通过递增索引来访问数据是特定于数组类型的方式，
            并不是其他具有隐式顺序的数据结构。

        ES5 中增加了 Array.prototype.forEach() 方法，向通用迭代需求迈进了一步。
`);

let collection = ["foo", "bar", "baz"];
/* 
foo
bar
baz
 */
collection.forEach((item) => {
    console.log(item);
});

console.log(`

        为了解决开发者无需事先知道如何迭代就能实现迭代这个操作。这个解决方案就是 迭代器模式。

    `)